Spring boot application can be directly created by visiting 
https://start.spring.io

Spring boot main application would use below annotation 
@SpringBootApplication

- CURD Operation
We need to perform configuration with JDBC which is boiler plate code & we need to perform with every project 
In  order to remove this bolierplate code, we can use spring data JPA

Steps to use spring data jpa
1. Add database specific dependency 
2. Add spring data jpa dependency 
3. Configure DB specific properties using application properties file
4. Create an interface and extend it from Jparepository
5. Specify what is the type of entity we are working & which field is acting as primary key
6. Anotate entity class with appropriate JPA anotations 


Scale up specific microservices to be able to run multiple instances 
To make this, we can specify port as server.port=0 in the application.properties file

In OpenFeign interface we were adding hardcoded URL , which creates 2 problems
 - We do not know the port of coupoun service anymore
 - With hardcoding the URL load balancing will not happen. reuest will be send to only that service where port is hardcoded
 
 Hence, hard coding URL must be avoided 
 
 This is where we can use another design pattern called "Service Discovery". Idea is each microservice register itself with a service registered with a unique name.
 Then that microservice can be accessed with that unqie name. One of the most popular implementation of the service discovery is "Eureka" from Netflix
 
 Steps to be followed:
 
 1 - Create a new spring boot project
 2 - Add Eureka server dependency 
 3 - Annotate application class with @EnableEurekaServer 
 4 - change the port to 8761 (not mandatory, but recommended)
 
 
